/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author Venkat Suprabath
 */
public class ItemsList extends javax.swing.JFrame {

    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost:3306/supermarket";
    static final String USER = "root";
    static final String PASS = "venkatrao";
    
    /**
     * Creates new form ItemsList
     */
    public ItemsList() {
        initComponents();
        DefaultTableModel model = (DefaultTableModel) TItems.getModel();
        try{
            Class.forName(JDBC_DRIVER);
            Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
            Statement stmt= (Statement)con.createStatement();
            String query = "SELECT * FROM items;";
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()){
                String item_name = rs.getString(2);
                int item_code = rs.getInt(1);
                int price = rs.getInt(3);
                int discount = rs.getInt(4);
                int stock = rs.getInt(5);
                model.addRow(new Object[] {item_code, item_name, price, discount, stock});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Failed!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        TItems = new javax.swing.JTable();
        TFSearch = new javax.swing.JTextField();
        RBItemID = new javax.swing.JRadioButton();
        RBItemName = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        BBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TItems.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Price", "Discount", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TItems);

        TFSearch.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        TFSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TFSearchFocusGained(evt);
            }
        });
        TFSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TFSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFSearchKeyTyped(evt);
            }
        });

        buttonGroup.add(RBItemID);
        RBItemID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        RBItemID.setText("Item ID");

        buttonGroup.add(RBItemName);
        RBItemName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        RBItemName.setSelected(true);
        RBItemName.setText("Item Name");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel1.setText("Search Using:");

        BBack.setText("< BACK");
        BBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("NILE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(RBItemID)
                .addGap(18, 18, 18)
                .addComponent(RBItemName)
                .addGap(28, 28, 28)
                .addComponent(TFSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(257, 257, 257)
                .addComponent(BBack))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BBack)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBItemID)
                    .addComponent(RBItemName)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFSearchFocusGained

    }//GEN-LAST:event_TFSearchFocusGained

    private void TFSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFSearchKeyPressed

    }//GEN-LAST:event_TFSearchKeyPressed

    private void TFSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFSearchKeyReleased
        DefaultTableModel model = (DefaultTableModel) TItems.getModel();
        model.setRowCount(0);
        try{
            Class.forName(JDBC_DRIVER);
            Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
            Statement stmt= (Statement)con.createStatement();
            String search = TFSearch.getText();
            String query;
            if(RBItemID.isSelected()){
                query = "SELECT * FROM items WHERE item_id like '"+search+"%';";
            }else{
                query = "SELECT * FROM items WHERE item_name like '"+search+"%';";
            }
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()){
                String item_name = rs.getString(2);
                int item_code = rs.getInt(1);
                int price = rs.getInt(3);
                int discount = rs.getInt(4);
                int stock = rs.getInt(5);
                model.addRow(new Object[] {item_code, item_name, price, discount, stock});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Failed!");
        }
    }//GEN-LAST:event_TFSearchKeyReleased

    private void TFSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFSearchKeyTyped

    }//GEN-LAST:event_TFSearchKeyTyped

    private void BBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBackActionPerformed
        if(LoginForm.LUserStatus.getText().equals("U")){
            MenuPage frame = new MenuPage();
            frame.setVisible(true);
            this.setVisible(false);
        }else{
            MenuFormAdmin frame = new MenuFormAdmin();
            frame.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_BBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemsList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBack;
    private javax.swing.JRadioButton RBItemID;
    private javax.swing.JRadioButton RBItemName;
    private javax.swing.JTextField TFSearch;
    private javax.swing.JTable TItems;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
